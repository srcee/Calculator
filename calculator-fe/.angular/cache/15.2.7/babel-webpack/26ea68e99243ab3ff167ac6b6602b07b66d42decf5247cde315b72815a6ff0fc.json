{"ast":null,"code":"import { CalculatorStateAction } from '../state/calculator.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class CalculatorEquationService {\n  constructor(store) {\n    this.store = store;\n  }\n  updateEquation(payload) {\n    switch (payload) {\n      case 'clear':\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.ClearEquation\n          });\n          break;\n        }\n      case 'equals':\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.Equals\n          });\n          break;\n        }\n      case 'backspace':\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.Backspace\n          });\n          break;\n        }\n      case '.':\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.DecimalPoint,\n            payload\n          });\n          break;\n        }\n      default:\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.UpdateEquation,\n            payload\n          });\n        }\n    }\n  }\n}\nCalculatorEquationService.ɵfac = function CalculatorEquationService_Factory(t) {\n  return new (t || CalculatorEquationService)(i0.ɵɵinject(i1.Store));\n};\nCalculatorEquationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalculatorEquationService,\n  factory: CalculatorEquationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,qBAAqB,QAAQ,6BAA6B;;;AAKnE,OAAM,MAAOC,yBAAyB;EACpCC,YAAoBC,KAAsB;IAAtB,UAAK,GAALA,KAAK;EAAoB;EAE7CC,cAAc,CAACC,OAAe;IAC5B,QAAQA,OAAO;MACb,KAAK,OAAO;QAAE;UACZ,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC;YAClBC,IAAI,EAAEP,qBAAqB,CAACQ;WAC7B,CAAC;UACF;;MAEF,KAAK,QAAQ;QAAE;UACb,IAAI,CAACL,KAAK,CAACG,QAAQ,CAAC;YAClBC,IAAI,EAAEP,qBAAqB,CAACS;WAC7B,CAAC;UACF;;MAEF,KAAK,WAAW;QAAE;UAChB,IAAI,CAACN,KAAK,CAACG,QAAQ,CAAC;YAClBC,IAAI,EAAEP,qBAAqB,CAACU;WAC7B,CAAC;UACF;;MAEF,KAAK,GAAG;QAAE;UACR,IAAI,CAACP,KAAK,CAACG,QAAQ,CAAC;YAClBC,IAAI,EAAEP,qBAAqB,CAACW,YAAY;YACxCN;WACD,CAAC;UACF;;MAEF;QAAS;UACP,IAAI,CAACF,KAAK,CAACG,QAAQ,CAAC;YAClBC,IAAI,EAAEP,qBAAqB,CAACY,cAAc;YAC1CP;WACD,CAAC;;IACH;EAEL;;AArCWJ,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;SAAzBA,yBAAyB;EAAAY,SAAzBZ,yBAAyB;EAAAa,YAFxB;AAAM","names":["CalculatorStateAction","CalculatorEquationService","constructor","store","updateEquation","payload","dispatch","type","ClearEquation","Equals","Backspace","DecimalPoint","UpdateEquation","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ivaylo.brezoev\\Desktop\\calculator\\src\\app\\calculator\\services\\calculatorEquation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { AppState } from 'src/app/types/appState.interface';\n\nimport { CalculatorStateAction } from '../state/calculator.actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CalculatorEquationService {\n  constructor(private store: Store<AppState>) {}\n\n  updateEquation(payload: string) {\n    switch (payload) {\n      case 'clear': {\n        this.store.dispatch({\n          type: CalculatorStateAction.ClearEquation,\n        });\n        break;\n      }\n      case 'equals': {\n        this.store.dispatch({\n          type: CalculatorStateAction.Equals,\n        });\n        break;\n      }\n      case 'backspace': {\n        this.store.dispatch({\n          type: CalculatorStateAction.Backspace,\n        });\n        break;\n      }\n      case '.': {\n        this.store.dispatch({\n          type: CalculatorStateAction.DecimalPoint,\n          payload,\n        });\n        break;\n      }\n      default: {\n        this.store.dispatch({\n          type: CalculatorStateAction.UpdateEquation,\n          payload,\n        });\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}