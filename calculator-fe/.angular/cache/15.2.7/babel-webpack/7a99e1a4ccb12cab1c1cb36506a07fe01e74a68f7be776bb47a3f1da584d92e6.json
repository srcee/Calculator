{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BaseApi {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  get(endpoint, params) {\n    let httpParams = new HttpParams();\n    if (params) {\n      for (const key in params) {\n        if (params.hasOwnProperty(key)) {\n          httpParams = httpParams.set(key, params[key]);\n        }\n      }\n    }\n    return this.http.get(`${this.baseUrl}/${endpoint}`, {\n      params: httpParams\n    });\n  }\n  post(endpoint, body) {\n    return this.http.post(`${this.baseUrl}/${endpoint}`, body);\n  }\n}\nBaseApi.ɵfac = function BaseApi_Factory(t) {\n  return new (t || BaseApi)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(String));\n};\nBaseApi.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BaseApi,\n  factory: BaseApi.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAM7D,OAAM,MAAOC,OAAO;EAClBC,YACYC,IAAgB,EACAC,OAAe;IAD/B,SAAI,GAAJD,IAAI;IACY,YAAO,GAAPC,OAAO;EAChC;EAEHC,GAAG,CAAIC,QAAgB,EAAEC,MAA+B;IACtD,IAAIC,UAAU,GAAG,IAAIR,UAAU,EAAE;IACjC,IAAIO,MAAM,EAAE;MACV,KAAK,MAAME,GAAG,IAAIF,MAAM,EAAE;QACxB,IAAIA,MAAM,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;UAC9BD,UAAU,GAAGA,UAAU,CAACG,GAAG,CAACF,GAAG,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;;;;IAInD,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAI,GAAG,IAAI,CAACD,OAAO,IAAIE,QAAQ,EAAE,EAAE;MACrDC,MAAM,EAAEC;KACT,CAAC;EACJ;EAEAI,IAAI,CAAIN,QAAgB,EAAEO,IAAS;IACjC,OAAO,IAAI,CAACV,IAAI,CAACS,IAAI,CAAI,GAAG,IAAI,CAACR,OAAO,IAAIE,QAAQ,EAAE,EAAEO,IAAI,CAAC;EAC/D;;AAtBWZ,OAAO;mBAAPA,OAAO,0CAGRa,MAAM;AAAA;AAHLb,OAAO;SAAPA,OAAO;EAAAc,SAAPd,OAAO;EAAAe,YAFN;AAAM","names":["HttpParams","BaseApi","constructor","http","baseUrl","get","endpoint","params","httpParams","key","hasOwnProperty","set","post","body","String","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ivaylo.brezoev\\Desktop\\calculator-monorepo\\calculator-fe\\src\\api\\base-api.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BaseApi {\r\n  constructor(\r\n    protected http: HttpClient,\r\n    @Inject(String) protected baseUrl: string\r\n  ) {}\r\n\r\n  get<T>(endpoint: string, params?: { [key: string]: any }): Observable<T> {\r\n    let httpParams = new HttpParams();\r\n    if (params) {\r\n      for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n          httpParams = httpParams.set(key, params[key]);\r\n        }\r\n      }\r\n    }\r\n    return this.http.get<T>(`${this.baseUrl}/${endpoint}`, {\r\n      params: httpParams,\r\n    });\r\n  }\r\n\r\n  post<T>(endpoint: string, body: any): Observable<T> {\r\n    return this.http.post<T>(`${this.baseUrl}/${endpoint}`, body);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}