{"ast":null,"code":"import { CalculatorStateAction } from '../state/calculator.actions';\nimport { KeypadOperator } from '../components/keypad/keypad.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class CalculatorEquationService {\n  constructor(store) {\n    this.store = store;\n  }\n  updateEquation(payload) {\n    switch (payload.value) {\n      case KeypadOperator.Delete:\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.ClearEquation\n          });\n          break;\n        }\n      case KeypadOperator.Equals:\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.Equals\n          });\n          break;\n        }\n      case KeypadOperator.Backspace:\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.Backspace\n          });\n          break;\n        }\n      case KeypadOperator.DecimalPoint:\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.DecimalPoint,\n            payload\n          });\n          break;\n        }\n      default:\n        {\n          this.store.dispatch({\n            type: CalculatorStateAction.UpdateEquation,\n            payload\n          });\n        }\n    }\n  }\n}\nCalculatorEquationService.ɵfac = function CalculatorEquationService_Factory(t) {\n  return new (t || CalculatorEquationService)(i0.ɵɵinject(i1.Store));\n};\nCalculatorEquationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalculatorEquationService,\n  factory: CalculatorEquationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SACEA,qBAAqB,QAEhB,6BAA6B;AACpC,SAASC,cAAc,QAAQ,kCAAkC;;;AAOjE,OAAM,MAAOC,yBAAyB;EACpCC,YAAoBC,KAAsB;IAAtB,UAAK,GAALA,KAAK;EAAoB;EAE7CC,cAAc,CAACC,OAA8B;IAC3C,QAAQA,OAAO,CAACC,KAAK;MACnB,KAAKN,cAAc,CAACO,MAAM;QAAE;UAC1B,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAAC;YAClBC,IAAI,EAAEV,qBAAqB,CAACW;WAC7B,CAAC;UACF;;MAEF,KAAKV,cAAc,CAACW,MAAM;QAAE;UAC1B,IAAI,CAACR,KAAK,CAACK,QAAQ,CAAC;YAClBC,IAAI,EAAEV,qBAAqB,CAACY;WAC7B,CAAC;UACF;;MAEF,KAAKX,cAAc,CAACY,SAAS;QAAE;UAC7B,IAAI,CAACT,KAAK,CAACK,QAAQ,CAAC;YAClBC,IAAI,EAAEV,qBAAqB,CAACa;WAC7B,CAAC;UACF;;MAEF,KAAKZ,cAAc,CAACa,YAAY;QAAE;UAChC,IAAI,CAACV,KAAK,CAACK,QAAQ,CAAC;YAClBC,IAAI,EAAEV,qBAAqB,CAACc,YAAY;YACxCR;WACD,CAAC;UACF;;MAEF;QAAS;UACP,IAAI,CAACF,KAAK,CAACK,QAAQ,CAAC;YAClBC,IAAI,EAAEV,qBAAqB,CAACe,cAAc;YAC1CT;WACD,CAAC;;IACH;EAEL;;AArCWJ,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;SAAzBA,yBAAyB;EAAAc,SAAzBd,yBAAyB;EAAAe,YAFxB;AAAM","names":["CalculatorStateAction","KeypadOperator","CalculatorEquationService","constructor","store","updateEquation","payload","value","Delete","dispatch","type","ClearEquation","Equals","Backspace","DecimalPoint","UpdateEquation","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ivaylo.brezoev\\Desktop\\calculator\\src\\app\\calculator\\services\\calculatorEquation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { AppState } from 'src/app/types/appState.interface';\n\nimport {\n  CalculatorStateAction,\n  UpdateEquationPayload,\n} from '../state/calculator.actions';\nimport { KeypadOperator } from '../components/keypad/keypad.enum';\nimport { CalculationPayload } from 'src/app/types/calculation.interface';\nimport { calculatorEquationSelector } from '../state/calculator.selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CalculatorEquationService {\n  constructor(private store: Store<AppState>) {}\n\n  updateEquation(payload: UpdateEquationPayload) {\n    switch (payload.value) {\n      case KeypadOperator.Delete: {\n        this.store.dispatch({\n          type: CalculatorStateAction.ClearEquation,\n        });\n        break;\n      }\n      case KeypadOperator.Equals: {\n        this.store.dispatch({\n          type: CalculatorStateAction.Equals,\n        });\n        break;\n      }\n      case KeypadOperator.Backspace: {\n        this.store.dispatch({\n          type: CalculatorStateAction.Backspace,\n        });\n        break;\n      }\n      case KeypadOperator.DecimalPoint: {\n        this.store.dispatch({\n          type: CalculatorStateAction.DecimalPoint,\n          payload,\n        });\n        break;\n      }\n      default: {\n        this.store.dispatch({\n          type: CalculatorStateAction.UpdateEquation,\n          payload,\n        });\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}